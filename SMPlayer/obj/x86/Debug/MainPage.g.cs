#pragma checksum "C:\Users\Seaky\source\repos\SMPlayer\SMPlayer\MainPage.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "DB2E1577BB8088EB33F4E0D4A5322878"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SMPlayer
{
    partial class MainPage : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_FrameworkElement_Width(global::Windows.UI.Xaml.FrameworkElement obj, global::System.Double value)
            {
                obj.Width = value;
            }
            public static void Set_Windows_UI_Xaml_Media_Animation_DoubleAnimation_From(global::Windows.UI.Xaml.Media.Animation.DoubleAnimation obj, global::System.Nullable<global::System.Double> value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Double) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Double), targetNullValue);
                }
                obj.From = value;
            }
            public static void Set_Windows_UI_Xaml_Media_Animation_DoubleAnimation_To(global::Windows.UI.Xaml.Media.Animation.DoubleAnimation obj, global::System.Nullable<global::System.Double> value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Double) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Double), targetNullValue);
                }
                obj.To = value;
            }
            public static void Set_Windows_UI_Xaml_FrameworkElement_Height(global::Windows.UI.Xaml.FrameworkElement obj, global::System.Double value)
            {
                obj.Height = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class MainPage_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IMainPage_Bindings
        {
            private global::SMPlayer.MainPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.Border obj8;
            private global::Windows.UI.Xaml.Controls.TextBlock obj9;
            private global::Windows.UI.Xaml.Media.Animation.DoubleAnimation obj28;
            private global::Windows.UI.Xaml.Media.Animation.DoubleAnimation obj29;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj8WidthDisabled = false;
            private static bool isobj9HeightDisabled = false;
            private static bool isobj9TextDisabled = false;
            private static bool isobj28FromDisabled = false;
            private static bool isobj28ToDisabled = false;
            private static bool isobj29FromDisabled = false;
            private static bool isobj29ToDisabled = false;

            private MainPage_obj1_BindingsTracking bindingsTracking;

            public MainPage_obj1_Bindings()
            {
                this.bindingsTracking = new MainPage_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 164 && columnNumber == 17)
                {
                    isobj8WidthDisabled = true;
                }
                else if (lineNumber == 170 && columnNumber == 17)
                {
                    isobj9HeightDisabled = true;
                }
                else if (lineNumber == 175 && columnNumber == 17)
                {
                    isobj9TextDisabled = true;
                }
                else if (lineNumber == 257 && columnNumber == 33)
                {
                    isobj28FromDisabled = true;
                }
                else if (lineNumber == 258 && columnNumber == 33)
                {
                    isobj28ToDisabled = true;
                }
                else if (lineNumber == 237 && columnNumber == 33)
                {
                    isobj29FromDisabled = true;
                }
                else if (lineNumber == 238 && columnNumber == 33)
                {
                    isobj29ToDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 8: // MainPage.xaml line 162
                        this.obj8 = (global::Windows.UI.Xaml.Controls.Border)target;
                        break;
                    case 9: // MainPage.xaml line 168
                        this.obj9 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 28: // MainPage.xaml line 253
                        this.obj28 = (global::Windows.UI.Xaml.Media.Animation.DoubleAnimation)target;
                        break;
                    case 29: // MainPage.xaml line 233
                        this.obj29 = (global::Windows.UI.Xaml.Media.Animation.DoubleAnimation)target;
                        break;
                    default:
                        break;
                }
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IMainPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SMPlayer.MainPage)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SMPlayer.MainPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_MainNavigationView(obj.MainNavigationView, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_AppTitleBar(obj.AppTitleBar, phase);
                    }
                }
                this.Update_Windows_ApplicationModel_Package_Current(global::Windows.ApplicationModel.Package.Current, phase);
            }
            private void Update_MainNavigationView(global::Windows.UI.Xaml.Controls.NavigationView obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_MainNavigationView_OpenPaneLength(obj.OpenPaneLength, phase);
                        this.Update_MainNavigationView_CompactPaneLength(obj.CompactPaneLength, phase);
                    }
                }
            }
            private void Update_MainNavigationView_OpenPaneLength(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // MainPage.xaml line 162
                    if (!isobj8WidthDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_Width(this.obj8, obj);
                    }
                    // MainPage.xaml line 253
                    if (!isobj28FromDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Media_Animation_DoubleAnimation_From(this.obj28, obj, null);
                    }
                    // MainPage.xaml line 233
                    if (!isobj29ToDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Media_Animation_DoubleAnimation_To(this.obj29, obj, null);
                    }
                }
            }
            private void Update_AppTitleBar(global::Windows.UI.Xaml.Controls.Grid obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_AppTitleBar(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_AppTitleBar_Height(obj.Height, phase);
                    }
                }
            }
            private void Update_AppTitleBar_Height(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // MainPage.xaml line 168
                    if (!isobj9HeightDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_Height(this.obj9, obj);
                    }
                }
            }
            private void Update_Windows_ApplicationModel_Package_Current(global::Windows.ApplicationModel.Package obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Windows_ApplicationModel_Package_Current_DisplayName(obj.DisplayName, phase);
                    }
                }
            }
            private void Update_Windows_ApplicationModel_Package_Current_DisplayName(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // MainPage.xaml line 168
                    if (!isobj9TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj9, obj, null);
                    }
                }
            }
            private void Update_MainNavigationView_CompactPaneLength(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // MainPage.xaml line 253
                    if (!isobj28ToDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Media_Animation_DoubleAnimation_To(this.obj28, obj, null);
                    }
                    // MainPage.xaml line 233
                    if (!isobj29FromDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Media_Animation_DoubleAnimation_From(this.obj29, obj, null);
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class MainPage_obj1_BindingsTracking
            {
                private global::System.WeakReference<MainPage_obj1_Bindings> weakRefToBindingObj; 

                public MainPage_obj1_BindingsTracking(MainPage_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<MainPage_obj1_Bindings>(obj);
                }

                public MainPage_obj1_Bindings TryGetBindingObject()
                {
                    MainPage_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_AppTitleBar(null);
                }

                public void DependencyPropertyChanged_AppTitleBar_Height(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    MainPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Windows.UI.Xaml.Controls.Grid obj = sender as global::Windows.UI.Xaml.Controls.Grid;
                        if (obj != null)
                        {
                            bindings.Update_AppTitleBar_Height(obj.Height, DATA_CHANGED);
                        }
                    }
                }
                private global::Windows.UI.Xaml.Controls.Grid cache_AppTitleBar = null;
                private long tokenDPC_AppTitleBar_Height = 0;
                public void UpdateChildListeners_AppTitleBar(global::Windows.UI.Xaml.Controls.Grid obj)
                {
                    if (obj != cache_AppTitleBar)
                    {
                        if (cache_AppTitleBar != null)
                        {
                            cache_AppTitleBar.UnregisterPropertyChangedCallback(global::Windows.UI.Xaml.FrameworkElement.HeightProperty, tokenDPC_AppTitleBar_Height);
                            cache_AppTitleBar = null;
                        }
                        if (obj != null)
                        {
                            cache_AppTitleBar = obj;
                            tokenDPC_AppTitleBar_Height = obj.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.FrameworkElement.HeightProperty, DependencyPropertyChanged_AppTitleBar_Height);
                        }
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 1: // MainPage.xaml line 1
                {
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)(target);
                    ((global::Windows.UI.Xaml.Controls.Page)element1).Loaded += this.Page_Loaded;
                }
                break;
            case 2: // MainPage.xaml line 22
                {
                    this.MainNavigationView = (global::Windows.UI.Xaml.Controls.NavigationView)(target);
                    ((global::Windows.UI.Xaml.Controls.NavigationView)this.MainNavigationView).ItemInvoked += this.MainNavigationView_ItemInvoked;
                    ((global::Windows.UI.Xaml.Controls.NavigationView)this.MainNavigationView).PaneClosing += this.MainNavigationView_PaneClosing;
                    ((global::Windows.UI.Xaml.Controls.NavigationView)this.MainNavigationView).PaneOpening += this.MainNavigationView_PaneOpening;
                }
                break;
            case 3: // MainPage.xaml line 156
                {
                    this.AppTitleBar = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 4: // MainPage.xaml line 178
                {
                    this.BackButton = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)this.BackButton).Click += this.BackButton_Click;
                }
                break;
            case 5: // MainPage.xaml line 184
                {
                    this.FakeTogglePaneButton = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)this.FakeTogglePaneButton).Click += this.FakeTogglePaneButton_Click;
                }
                break;
            case 6: // MainPage.xaml line 191
                {
                    this.MainMediaControl = (global::SMPlayer.MediaControl)(target);
                }
                break;
            case 7: // MainPage.xaml line 195
                {
                    this.MainLoadingControl = (global::SMPlayer.LoadingControl)(target);
                }
                break;
            case 8: // MainPage.xaml line 162
                {
                    this.AppTitleBorder = (global::Windows.UI.Xaml.Controls.Border)(target);
                }
                break;
            case 9: // MainPage.xaml line 168
                {
                    this.AppTitle = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 10: // MainPage.xaml line 33
                {
                    this.HeaderGrid = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 11: // MainPage.xaml line 38
                {
                    this.MainNavigationViewHeader = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 12: // MainPage.xaml line 43
                {
                    this.HeaderSearchButton = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)this.HeaderSearchButton).Click += this.HeaderSearchButton_Click;
                }
                break;
            case 13: // MainPage.xaml line 55
                {
                    this.HeaderSearchBar = (global::Windows.UI.Xaml.Controls.AutoSuggestBox)(target);
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)this.HeaderSearchBar).FocusDisengaged += this.HeaderNaviSearchBar_FocusDisengaged;
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)this.HeaderSearchBar).LosingFocus += this.HeaderNaviSearchBar_LosingFocus;
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)this.HeaderSearchBar).NoFocusCandidateFound += this.HeaderNaviSearchBar_NoFocusCandidateFound;
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)this.HeaderSearchBar).QuerySubmitted += this.SearchBar_QuerySubmitted;
                }
                break;
            case 14: // MainPage.xaml line 72
                {
                    this.NaviSearchBar = (global::Windows.UI.Xaml.Controls.AutoSuggestBox)(target);
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)this.NaviSearchBar).QuerySubmitted += this.SearchBar_QuerySubmitted;
                }
                break;
            case 15: // MainPage.xaml line 81
                {
                    this.MusicLibraryItem = (global::Windows.UI.Xaml.Controls.NavigationViewItem)(target);
                }
                break;
            case 16: // MainPage.xaml line 87
                {
                    this.ArtistsItem = (global::Windows.UI.Xaml.Controls.NavigationViewItem)(target);
                }
                break;
            case 17: // MainPage.xaml line 96
                {
                    this.AlbumsItem = (global::Windows.UI.Xaml.Controls.NavigationViewItem)(target);
                }
                break;
            case 18: // MainPage.xaml line 106
                {
                    this.NowPlayingItem = (global::Windows.UI.Xaml.Controls.NavigationViewItem)(target);
                }
                break;
            case 19: // MainPage.xaml line 114
                {
                    this.RecentItem = (global::Windows.UI.Xaml.Controls.NavigationViewItem)(target);
                }
                break;
            case 20: // MainPage.xaml line 123
                {
                    this.LocalItem = (global::Windows.UI.Xaml.Controls.NavigationViewItem)(target);
                }
                break;
            case 21: // MainPage.xaml line 132
                {
                    this.PlaylistsItem = (global::Windows.UI.Xaml.Controls.NavigationViewItem)(target);
                }
                break;
            case 22: // MainPage.xaml line 141
                {
                    this.MyFavoritesItem = (global::Windows.UI.Xaml.Controls.NavigationViewItem)(target);
                }
                break;
            case 23: // MainPage.xaml line 151
                {
                    this.NaviFrame = (global::Windows.UI.Xaml.Controls.Frame)(target);
                    ((global::Windows.UI.Xaml.Controls.Frame)this.NaviFrame).Navigated += this.NaviFrame_Navigated;
                }
                break;
            case 24: // MainPage.xaml line 200
                {
                    this.WindowWidthChange = (global::Windows.UI.Xaml.VisualStateGroup)(target);
                }
                break;
            case 25: // MainPage.xaml line 221
                {
                    this.NavigationViewPaneStateChange = (global::Windows.UI.Xaml.VisualStateGroup)(target);
                }
                break;
            case 26: // MainPage.xaml line 222
                {
                    this.Open = (global::Windows.UI.Xaml.VisualState)(target);
                }
                break;
            case 27: // MainPage.xaml line 247
                {
                    this.Close = (global::Windows.UI.Xaml.VisualState)(target);
                }
                break;
            case 30: // MainPage.xaml line 201
                {
                    this.MinimumLayout = (global::Windows.UI.Xaml.VisualState)(target);
                }
                break;
            case 31: // MainPage.xaml line 215
                {
                    this.WideLayout = (global::Windows.UI.Xaml.VisualState)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // MainPage.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    MainPage_obj1_Bindings bindings = new MainPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

